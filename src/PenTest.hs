
data C = C Double

ch :: Char -> C
ch c = C (fromIntegral c)

instance Show C where
  show (C x) = show (0 `max` (255 `min` ord (round x)))

type VBool = Double

(==?) :: C -> C -> VBool
C x ==? C y
  | round x == round y = 2 - abs (x - fromIntegral (round x))
                           - abs (y - fromIntegral (round y)) 
  | otherwise          = - abs (x - y)

